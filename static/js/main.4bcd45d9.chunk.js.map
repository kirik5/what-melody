{"version":3,"sources":["components/app/login/login-form/login-form.jsx","index.js","reducers/answers-slice.js","reducers/mistakes-slice.js","mocks/questions.js","api.js","reducers/question-slice.js","reducers/time-slice.js","reducers/active-player-slice.js","reducers/genre-answers-slice.js","reducers/authorization-slice.js","reducers/store.js","components/app/hello-container/hello/hello.jsx","reducers/game-action-thunk.js","components/app/hello-container/hello-container.js","components/app/error-container/error/error.jsx","components/app/error-container/error-container.js","components/app/result-container/result/result.jsx","components/app/result-container/result-container.js","components/app/timer/serializeTime.js","components/app/timer/timer.jsx","components/app/timer/timer-container.jsx","components/app/mistakes-container/mistakes/mistakes.js","components/app/mistakes-container/mistakes-container.jsx","components/app/back-to-start-container/back-to-start/back-to-start.jsx","components/app/back-to-start-container/back-to-start-container.jsx","components/app/audio-player/audio-player.jsx","components/app/audio-player/audio-player-container.jsx","components/app/genre-question/genre-question-form-container/genre-question-form/answer-checked/answer-checked.jsx","components/app/genre-question/genre-question-form-container/genre-question-form/answer-checked/answer-checked-container.js","components/app/genre-question/genre-question-form-container/genre-question-form/genre-question-form.jsx","components/app/genre-question/genre-question-form-container/genre-question-form-container.jsx","components/app/genre-question/genre-question.js","components/app/artist-question/artist-question-form-container/artist-question-form/answer-button-container/answer-button/answer-button.jsx","components/app/artist-question/artist-question-form-container/artist-question-form/answer-button-container/answer-button-container.jsx","components/app/artist-question/artist-question-form-container/artist-question-form/artist-question-form.jsx","components/app/artist-question/artist-question-form-container/artist-question-form-container.jsx","components/app/artist-question/artist-question.js","components/app/loading/loading.jsx","components/app/app.js","components/app/loading/loading.module.css"],"names":["min","store","initialState","answersSlice","createSlice","name","reducers","pushAnswer","state","action","push","payload","clearAnswers","actions","lengthOfRightAnswersArr","createSelector","answers","filter","it","length","countOfMistakes","maxMistakes","mistakesSlice","addMistakes","resetMistakes","getMaxMistakes","mistakes","getMistakes","questions","serverAPI","Promise","resolve","reject","setTimeout","data","numberOfActiveQuestion","status","fetchQuestions","createAsyncThunk","a","response","questionSlice","addActiveQuestionNumber","resetGame","extraReducers","builder","addCase","pending","fulfilled","getQuestionsStatus","getNumberOfActiveQuestion","allQuestions","isNotEndOfQuestions","lengthOfQuestions","getActiveQuestion","getTypeOfQuestion","question","type","isStartScreen","getAnswers","getGenre","genre","getSongSrc","song","src","maxTime","currentTime","timerId","timeSlice","subTime","setTimerId","resetTimer","getCurrentTime","timer","activePlayerSlice","changeActivePlayer","allPlayersOff","genreAnswersSlice","changeGenreAnswers","genreAnswersClear","authorizationSlice","isAuthorized","authorizationInfo","id","email","loading","failed","error","logout","user","getIsAuthorized","authorization","configureStore","reducer","answersReducer","mistakesReducer","questionReducer","activePlayer","activePlayerReducer","genreAnswers","genreAnswersReducer","authorizationReducer","form","Hello","time","startGameHandler","className","alt","width","height","onClick","dispatch","getState","timerTick","isNotGameOver","timerOff","clearTimeout","restartGameHandler","HelloContainer","useSelector","useDispatch","Error","onRestartGame","useEffect","ErrorContainer","Result","countOfRightAnswers","ResultContainer","transformTime","fn","arg","reduce","f","compose","minutes","seconds","Timer","newTime","progress","Math","floor","xmlns","viewBox","cx","cy","r","style","transform","transformOrigin","strokeDasharray","strokeDashoffset","TimerContainer","props","Mistakes","Array","fill","map","i","MistakesContainer","BackToStart","goToStartGame","href","evt","preventDefault","BackToStartContainer","AudioPlayer","isLoading","setLoadingStatus","isPlaying","changePlayer","audioRef","useRef","audio","current","oncanplaythrough","play","pause","onplay","onpause","ontimeupdate","disabled","ref","AudioPlayerContainer","useState","setIsLoading","number","isPlayerPlayingId","AnswerChecked","isChecked","changeChecked","value","onChange","checked","htmlFor","AnswerCheckedContainer","checkedArray","checkedId","GenreQuestionForm","onAnswerButtonClick","onSubmit","GenreQuestionFormContainer","userAnswers","rightAnswer","answer","every","takeAnswerFromGenreQuestion","GenreQuestion","justifyContent","AnswerButton","source","picture","artist","AnswerButtonContainer","userAnswer","target","rightArtist","takeAnswerFromArtistQuestion","ArtistQuestionForm","ArtistQuestionFormContainer","songSrc","ArtistQuestion","required","undefined","minLength8","test","renderField","input","label","meta","touched","warning","placeholder","reduxForm","handleSubmit","submitting","Field","component","validate","Loading","styles","background","App","notEndOfQuestions","notGameOver","statusOfFetchingQuestions","typeOfQuestion","startScreen","isAuthorization","getScreen","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4bcd45d9.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {Field, reduxForm} from \"redux-form\"\r\n\r\n\r\nconst required = value => (value || typeof value === 'number' ? undefined : 'Required')\r\nexport const minLength = min => value =>\r\n    value && value.length < min ? `Must be ${min} characters or more` : undefined\r\nexport const minLength8 = minLength(8)\r\nconst email = value =>\r\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n        ? 'Invalid email address'\r\n        : undefined\r\n\r\n\r\nconst renderField = ({\r\n                         input,\r\n                         label,\r\n                         type,\r\n                         meta: {touched, error, warning}\r\n                     }) => (\r\n\r\n    <p className=\"login__field\">\r\n        <label className=\"login__label\" htmlFor=\"name\">{label}</label>\r\n        <input className=\"login__input\" placeholder={label} type={type} id={label} {...input}/>\r\n        {touched &&\r\n        ((error && <span>{error}</span>) ||\r\n            (warning && <span>{warning}</span>))}\r\n    </p>\r\n)\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    const { handleSubmit, submitting, error } = props\r\n\r\n    return (\r\n        <form className=\"login__form\" onSubmit={handleSubmit}>\r\n            {error && <div className=\"sign-in__message\">\r\n                <p>{error}</p>\r\n            </div>}\r\n\r\n            <Field\r\n                name=\"username\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                label=\"Username\"\r\n                validate={[required, email]}\r\n            />\r\n            <Field\r\n                name=\"password\"\r\n                type=\"password\"\r\n                component={renderField}\r\n                label=\"Password\"\r\n                validate={[required, minLength8]}\r\n            />\r\n\r\n            <button className=\"login__button button\" type=\"submit\" disabled={submitting}>Войти</button>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default reduxForm({\r\n    form: 'singin',\r\n})(LoginForm)","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./reducers/store\";\r\nimport App from \"./components/app/app\";\r\n\r\n\r\nconst init = (store) => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <App/>\r\n    </Provider>,\r\n    document.getElementById(`root`)\r\n  );\r\n};\r\n\r\n\r\ninit(store);\r\n","import {createSelector, createSlice} from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialState = [];\r\n\r\nconst answersSlice = createSlice({\r\n    name: 'answers',\r\n    initialState,\r\n    reducers: {\r\n        pushAnswer(state, action) {\r\n            state.push(action.payload);\r\n        },\r\n        clearAnswers() {\r\n            return initialState;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {pushAnswer, clearAnswers} = answersSlice.actions;\r\n\r\nexport default answersSlice.reducer;\r\n\r\nexport const lengthOfRightAnswersArr = createSelector(\r\n    state => state.answers.filter(it => it),\r\n    answers => answers.length,\r\n);\r\n","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialState = {\r\n    countOfMistakes: 0,\r\n    maxMistakes: 3,\r\n};\r\n\r\nconst mistakesSlice = createSlice({\r\n    name: 'mistakes',\r\n    initialState,\r\n    reducers: {\r\n        addMistakes(state) {\r\n            state.countOfMistakes += 1;\r\n        },\r\n        resetMistakes() {\r\n            return initialState;\r\n        }\r\n    },\r\n});\r\n\r\nexport const {addMistakes, resetMistakes} = mistakesSlice.actions;\r\n\r\nexport default mistakesSlice.reducer;\r\n\r\nexport const getMaxMistakes = state => state.mistakes.maxMistakes;\r\n\r\nexport const getMistakes = state => state.mistakes.countOfMistakes;","const questions = [{\r\n    \"type\": \"artist\",\r\n    \"song\": {\r\n        \"artist\": \"Endless Love\",\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\"\r\n    },\r\n    \"answers\": [{\r\n        \"picture\": \"https://htmlacademy-react-2.appspot.com/guess-melody/static/artist/Endless_Love.jpg\",\r\n        \"artist\": \"Endless Love\"\r\n    }, {\r\n        \"picture\": \"https://htmlacademy-react-2.appspot.com/guess-melody/static/artist/Silent_Partner.jpg\",\r\n        \"artist\": \"Silent Partner\"\r\n    }, {\r\n        \"picture\": \"https://htmlacademy-react-2.appspot.com/guess-melody/static/artist/Unicorn_Heads.jpg\",\r\n        \"artist\": \"Unicorn Heads\"\r\n    }]\r\n}, {\r\n    \"type\": \"artist\",\r\n    \"song\": {\r\n        \"artist\": \"Endless Love\",\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\"\r\n    },\r\n    \"answers\": [{\r\n        \"picture\": \"https://htmlacademy-react-2.appspot.com/guess-melody/static/artist/Endless_Love.jpg\",\r\n        \"artist\": \"Endless Love\"\r\n    }, {\r\n        \"picture\": \"https://htmlacademy-react-2.appspot.com/guess-melody/static/artist/Density_n_Time.jpg\",\r\n        \"artist\": \"Density & Time\"\r\n    }, {\r\n        \"picture\": \"https://htmlacademy-react-2.appspot.com/guess-melody/static/artist/The_Whole_Other.jpg\",\r\n        \"artist\": \"The Whole Other\"\r\n    }]\r\n}, {\r\n    \"type\": \"artist\",\r\n    \"song\": {\r\n        \"artist\": \"Unicorn Heads\",\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\"\r\n    },\r\n    \"answers\": [{\r\n        \"picture\": \"https://htmlacademy-react-2.appspot.com/guess-melody/static/artist/Density_n_Time.jpg\",\r\n        \"artist\": \"Density & Time\"\r\n    }, {\r\n        \"picture\": \"https://htmlacademy-react-2.appspot.com/guess-melody/static/artist/Unicorn_Heads.jpg\",\r\n        \"artist\": \"Unicorn Heads\"\r\n    }, {\r\n        \"picture\": \"https://htmlacademy-react-2.appspot.com/guess-melody/static/artist/Spazz_Cardigan.jpg\",\r\n        \"artist\": \"Spazz Cardigan\"\r\n    }]\r\n}, {\r\n    \"type\": \"genre\",\r\n    \"genre\": \"country\",\r\n    \"answers\": [{\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"alternative\"\r\n    }, {\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"electronic\"\r\n    }, {\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"alternative\"\r\n    }, {\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"country\"\r\n    }]\r\n}, {\r\n    \"type\": \"genre\",\r\n    \"genre\": \"country\",\r\n    \"answers\": [{\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"reggae\"\r\n    }, {\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"alternative\"\r\n    }, {\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"electronic\"\r\n    }, {\"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\", \"genre\": \"country\"}]\r\n}, {\r\n    \"type\": \"genre\",\r\n    \"genre\": \"electronic\",\r\n    \"answers\": [{\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"electronic\"\r\n    }, {\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"alternative\"\r\n    }, {\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"electronic\"\r\n    }, {\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"electronic\"\r\n    }]\r\n}, {\r\n    \"type\": \"genre\",\r\n    \"genre\": \"reggae\",\r\n    \"answers\": [{\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"alternative\"\r\n    }, {\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"reggae\"\r\n    }, {\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"alternative\"\r\n    }, {\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"electronic\"\r\n    }]\r\n}, {\r\n    \"type\": \"genre\",\r\n    \"genre\": \"electronic\",\r\n    \"answers\": [{\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"electronic\"\r\n    }, {\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"electronic\"\r\n    }, {\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"electronic\"\r\n    }, {\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"alternative\"\r\n    }]\r\n}, {\r\n    \"type\": \"genre\",\r\n    \"genre\": \"reggae\",\r\n    \"answers\": [{\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"alternative\"\r\n    }, {\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"alternative\"\r\n    }, {\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"country\"\r\n    }, {\"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\", \"genre\": \"reggae\"}]\r\n}, {\r\n    \"type\": \"genre\",\r\n    \"genre\": \"country\",\r\n    \"answers\": [{\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"country\"\r\n    }, {\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"country\"\r\n    }, {\r\n        \"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\",\r\n        \"genre\": \"country\"\r\n    }, {\"src\": \"https://web.archive.org/web/20070205234055/http://www.navyband.navy.mil/anthems/ANTHEMS/Albania.mp3\", \"genre\": \"electronic\"}]\r\n}]\r\n\r\nexport default questions;\r\n","// import axios from \"axios\";\r\nimport questions from \"./mocks/questions\"\r\n\r\n\r\n// const instance = axios.create({\r\n//     baseURL: \"https://htmlacademy-react-2.appspot.com/guess-melody\",\r\n//     timeout: 5000,\r\n//     withCredentials: true,\r\n// });\r\n\r\n// export const serverAPI = {\r\n//     getQuestions: () => instance.get('/questions'),\r\n//     authorising: ({email, password}) => instance.post('/login', {email, password}),\r\n// };\r\n\r\n\r\nexport const serverAPI = {\r\n    getQuestions: () => new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve({\r\n                data: questions\r\n            })\r\n            // reject('server dont answer...')\r\n        }, 500)\r\n    }),\r\n    authorising: ({email, password}) => new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve({\r\n                data: {\r\n                    id: 1,\r\n                    email: 'alkirichenko81@gmail.com',\r\n                    name: 'alkir',\r\n                }\r\n            })\r\n            // reject('Incorrect email or password!!!')\r\n        }, 500)\r\n    }),\r\n};\r\n","import questions from \"../mocks/questions\";\r\nimport {createAsyncThunk, createSelector, createSlice} from \"@reduxjs/toolkit\";\r\nimport {serverAPI} from \"../api\";\r\n\r\n\r\nconst initialState = {\r\n    numberOfActiveQuestion: -1,\r\n    questions: questions,\r\n    status: 'idle',\r\n};\r\n\r\nexport const fetchQuestions = createAsyncThunk('questions/fetchQuestions', async () => {\r\n    const response = await serverAPI.getQuestions();\r\n    return response.data;\r\n});\r\n\r\nconst questionSlice = createSlice({\r\n    name: 'questions',\r\n    initialState,\r\n    reducers: {\r\n        addActiveQuestionNumber(state) {\r\n            state.numberOfActiveQuestion += 1;\r\n        },\r\n        resetGame() {\r\n            return initialState;\r\n        },\r\n    },\r\n    extraReducers: builder => {\r\n        builder\r\n            .addCase(fetchQuestions.pending, (state) => {\r\n                state.status = 'loading'\r\n            })\r\n            .addCase(fetchQuestions.fulfilled, (state, action) => {\r\n                state.questions = action.payload;\r\n                state.status = 'idle';\r\n            })\r\n    },\r\n});\r\n\r\nexport const {addActiveQuestionNumber, resetGame} = questionSlice.actions;\r\n\r\nexport default questionSlice.reducer;\r\n\r\n\r\nexport const getQuestionsStatus = state => state.questions.status;\r\n\r\nexport const getNumberOfActiveQuestion = state => state.questions.numberOfActiveQuestion;\r\n\r\nexport const allQuestions = state => state.questions.questions;\r\n\r\nexport const isNotEndOfQuestions = createSelector(\r\n    getNumberOfActiveQuestion,\r\n    state => state.questions.questions.length,\r\n    (numberOfActiveQuestion, lengthOfQuestions) => lengthOfQuestions > numberOfActiveQuestion,\r\n);\r\n\r\nexport const getActiveQuestion = createSelector(\r\n    getNumberOfActiveQuestion,\r\n    allQuestions,\r\n    (numberOfActiveQuestion, questions) => questions[numberOfActiveQuestion],\r\n);\r\n\r\nexport const getTypeOfQuestion = createSelector(\r\n    getActiveQuestion,\r\n    question => {\r\n        if (question) {\r\n            return question.type;\r\n        }\r\n        return null;\r\n    }\r\n);\r\n\r\nexport const isStartScreen = createSelector(\r\n    getNumberOfActiveQuestion,\r\n    numberOfActiveQuestion => (numberOfActiveQuestion === -1)\r\n\r\n);\r\n\r\nexport const getAnswers = createSelector(\r\n    getActiveQuestion,\r\n    question => question.answers,\r\n);\r\n\r\nexport const getGenre = createSelector(\r\n    getActiveQuestion,\r\n    question => question.genre,\r\n);\r\n\r\nexport const getSongSrc = createSelector(\r\n    getActiveQuestion,\r\n    question => question.song.src,\r\n);","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialState = {\r\n    maxTime: 300,\r\n    currentTime: 300,\r\n    timerId: null\r\n};\r\n\r\nconst timeSlice = createSlice({\r\n    name: 'timer',\r\n    initialState,\r\n    reducers: {\r\n        subTime(state) {\r\n            state.currentTime -= 1;\r\n        },\r\n        setTimerId(state, action) {\r\n            state.timerId = action.payload;\r\n        },\r\n        resetTimer() {\r\n            return initialState;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {subTime, setTimerId, resetTimer} = timeSlice.actions;\r\n\r\nexport default timeSlice.reducer;\r\n\r\nexport const startTimer = () => (dispatch, getState) => {\r\n    const timerTick = () => {\r\n        if (getState().timer.currentTime > 0) {\r\n            dispatch(subTime());\r\n            let timerId = setTimeout(timerTick, 1000);\r\n\r\n            dispatch(setTimerId(timerId));\r\n        }\r\n    };\r\n\r\n    let timerId = setTimeout(timerTick, 1000);\r\n    dispatch(setTimerId(timerId));\r\n};\r\n\r\nexport const getCurrentTime = state => state.timer.currentTime;\r\n\r\n","import {createSelector, createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [-1];\r\n\r\nconst activePlayerSlice = createSlice({\r\n    name: 'activePlayer',\r\n    initialState,\r\n    reducers: {\r\n        changeActivePlayer(state, action) {\r\n            state[0] = action.payload;\r\n        },\r\n        allPlayersOff() {\r\n            return initialState;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {changeActivePlayer, allPlayersOff} = activePlayerSlice.actions;\r\n\r\nexport default activePlayerSlice.reducer;\r\n\r\nconst numberOfActivePlayer = state => state.activePlayer[0];\r\n\r\nexport const newActivePlayer = (i) => (dispatch, getState) => {\r\n    if (numberOfActivePlayer(getState()) === i) {\r\n        dispatch(changeActivePlayer(-1))\r\n    } else {\r\n        dispatch(changeActivePlayer(i))\r\n    }\r\n};\r\n\r\nexport const isPlayerPlayingId = (id) => createSelector(\r\n    state => state.activePlayer[0],\r\n    number => number === id,\r\n);","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [false, false, false, false];\r\n\r\nconst genreAnswersSlice = createSlice({\r\n    name: 'genreAnswers',\r\n    initialState,\r\n    reducers: {\r\n        changeGenreAnswers(state, action) {\r\n            state[action.payload] = !state[action.payload];\r\n        },\r\n        genreAnswersClear() {\r\n            return initialState;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {changeGenreAnswers, genreAnswersClear} = genreAnswersSlice.actions;\r\n\r\nexport default genreAnswersSlice.reducer;\r\n\r\nexport const genreUserAnswers = state => state.genreAnswers;","import {createSlice} from \"@reduxjs/toolkit\"\r\nimport {serverAPI} from \"../api\"\r\nimport {stopSubmit} from \"redux-form\"\r\n\r\n\r\nconst initialState = {\r\n    isAuthorized: false,\r\n    authorizationInfo: {\r\n        id: null,\r\n        email: '',\r\n        name: '',\r\n    },\r\n    status: 'idle'\r\n}\r\n\r\n\r\nexport const login = (mailPass) => async (dispatch) => {\r\n    dispatch(loading())\r\n    try {\r\n        const response = await serverAPI.authorising(mailPass)\r\n        dispatch(fulfilled(response.data))\r\n        window.history.back()\r\n    } catch (err) {\r\n        dispatch(stopSubmit('singin', {\r\n            _error: err,\r\n        }))\r\n        dispatch(failed(err))\r\n    }\r\n}\r\n\r\n\r\nconst authorizationSlice = createSlice({\r\n    name: 'authorization',\r\n    initialState,\r\n    reducers: {\r\n        loading(state) {\r\n            state.status = 'loading'\r\n        },\r\n        fulfilled(state, action) {\r\n            state.authorizationInfo.id = action.payload.id\r\n            state.authorizationInfo.email = action.payload.email\r\n            state.authorizationInfo.name = action.payload.name\r\n            state.isAuthorized = true\r\n            state.status = 'succeeded'\r\n        },\r\n        failed(state, action) {\r\n            state.status = 'failed'\r\n            state.error = action.payload\r\n        },\r\n        logout(state) {\r\n            state.status = 'idle'\r\n            state.error = null\r\n            state.user = null\r\n        }\r\n    },\r\n})\r\n\r\n\r\nexport const {loading, fulfilled, failed, logout} = authorizationSlice.actions\r\n\r\nexport default authorizationSlice.reducer\r\n\r\nexport const getIsAuthorized = state => state.authorization.isAuthorized\r\nexport const getIsLoading = state => state.authorization.status\r\n\r\n","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport answersReducer from \"./answers-slice\";\r\nimport mistakesReducer from \"./mistakes-slice\";\r\nimport questionReducer from \"./question-slice\";\r\nimport timeSlice from \"./time-slice\";\r\nimport activePlayerReducer from \"./active-player-slice\";\r\nimport genreAnswersReducer from \"./genre-answers-slice\";\r\nimport authorizationReducer from \"./authorization-slice\";\r\nimport {reducer} from \"redux-form\";\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        answers: answersReducer,\r\n        mistakes: mistakesReducer,\r\n        questions: questionReducer,\r\n        timer: timeSlice,\r\n        activePlayer: activePlayerReducer,\r\n        genreAnswers: genreAnswersReducer,\r\n        authorization: authorizationReducer,\r\n        form: reducer,\r\n    }\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Hello = ({time, maxMistakes, startGameHandler}) => {\r\n\r\n  return (\r\n    <section className=\"welcome\">\r\n      <div className=\"welcome__logo\">\r\n        <img src=\"img/melody-logo.png\" alt=\"Угадай мелодию\" width=\"186\" height=\"83\"/>\r\n      </div>\r\n      <button className=\"welcome__button\" onClick={startGameHandler}><span\r\n        className=\"visually-hidden\">Начать игру</span>\r\n      </button>\r\n      <h2 className=\"welcome__rules-title\">Правила игры</h2>\r\n      <p className=\"welcome__text\">Правила просты:</p>\r\n      <ul className=\"welcome__rules-list\">\r\n        <li>Нужно ответить на все вопросы за {time/60} минут.</li>\r\n        <li>Можно допустить {maxMistakes} ошибки.</li>\r\n      </ul>\r\n      <p className=\"welcome__text\">Удачи!</p>\r\n    </section>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Hello\r\n","import {\r\n    addActiveQuestionNumber,\r\n    allQuestions,\r\n    fetchQuestions,\r\n    getNumberOfActiveQuestion,\r\n    resetGame\r\n} from \"./question-slice\";\r\nimport {getCurrentTime, resetTimer, startTimer} from \"./time-slice\";\r\nimport {addMistakes, getMaxMistakes, getMistakes, resetMistakes} from \"./mistakes-slice\";\r\nimport {clearAnswers, pushAnswer} from \"./answers-slice\";\r\nimport {genreAnswersClear, genreUserAnswers} from \"./genre-answers-slice\";\r\nimport {allPlayersOff} from \"./active-player-slice\";\r\nimport {createSelector} from \"@reduxjs/toolkit\";\r\n\r\nexport const startGameHandler = () => (dispatch) => {\r\n    dispatch(addActiveQuestionNumber());\r\n    dispatch(startTimer());\r\n};\r\n\r\nexport const isNotGameOver = createSelector(\r\n    getMistakes,\r\n    getMaxMistakes,\r\n    getCurrentTime,\r\n    (countOfMistakes, maxMistakes, currentTime) => (countOfMistakes < maxMistakes) && (currentTime > 0),\r\n);\r\n\r\nconst takeAnswerFromGenreQuestion = (answers, rightAnswer, userAnswers) => {\r\n    const rightAnswers = answers.map(it => {\r\n        return it.genre === rightAnswer;\r\n    });\r\n    return rightAnswers.every((it, i) => it === userAnswers[i]);\r\n};\r\n\r\nexport const genreAnswerHandler = () => {\r\n    return (dispatch, getState) => {\r\n        const userAnswers = genreUserAnswers(getState());\r\n        const numberOfActiveQuestion = getNumberOfActiveQuestion(getState());\r\n        const questions = allQuestions(getState());\r\n        const rightAnswer = questions[numberOfActiveQuestion].genre;\r\n        const answers = questions[numberOfActiveQuestion].answers;\r\n        const answer = takeAnswerFromGenreQuestion(answers, rightAnswer, userAnswers);\r\n        if (!answer) {\r\n            dispatch(addMistakes())\r\n        }\r\n        dispatch(pushAnswer(answer));\r\n        dispatch(genreAnswersClear());\r\n        dispatch(allPlayersOff());\r\n        dispatch(addActiveQuestionNumber());\r\n    }\r\n};\r\n\r\nconst takeAnswerFromArtistQuestion = (userAnswer, rightArtist) => {\r\n    return rightArtist === userAnswer;\r\n};\r\n\r\nexport const artistAnswerHandler = (userAnswer) => {\r\n    return (dispatch, getState) => {\r\n        const numberOfActiveQuestion = getNumberOfActiveQuestion(getState());\r\n        const rightAnswer = getState().questions.questions[numberOfActiveQuestion].song.artist;\r\n        const answer = takeAnswerFromArtistQuestion(userAnswer, rightAnswer);\r\n        if (!answer) {\r\n            dispatch(addMistakes())\r\n        }\r\n        dispatch(pushAnswer(answer));\r\n        dispatch(allPlayersOff());\r\n        dispatch(addActiveQuestionNumber());\r\n    }\r\n};\r\n\r\nconst genreAnswers = state => state.genreAnswers;\r\n\r\nexport const checkedId = (id) => createSelector(\r\n    genreAnswers,\r\n    checkedArray => checkedArray[id],\r\n);\r\n\r\nexport const timerOff = () => (dispatch, getState) => {\r\n    const id = getState().timer.timerId;\r\n    clearTimeout(id);\r\n};\r\n\r\nexport const restartGameHandler = () => (dispatch) => {\r\n    dispatch(timerOff());\r\n    dispatch(resetTimer());\r\n    dispatch(allPlayersOff());\r\n    dispatch(genreAnswersClear());\r\n    dispatch(clearAnswers());\r\n    dispatch(resetMistakes());\r\n    dispatch(resetGame());\r\n    dispatch(fetchQuestions());\r\n};","import React from \"react\";\r\nimport Hello from \"./hello/hello\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {getCurrentTime} from \"../../../reducers/time-slice\";\r\nimport {getMaxMistakes} from \"../../../reducers/mistakes-slice\";\r\nimport {startGameHandler} from \"../../../reducers/game-action-thunk\";\r\n\r\n\r\nconst HelloContainer = () => {\r\n    const time = useSelector(getCurrentTime);\r\n    const maxMistakes = useSelector(getMaxMistakes);\r\n    const dispatch = useDispatch();\r\n\r\n    const startGame = () => {\r\n        dispatch(startGameHandler());\r\n    };\r\n\r\n    return (\r\n        <Hello\r\n            time={time}\r\n            maxMistakes={maxMistakes}\r\n            startGameHandler={startGame}\r\n        />\r\n    )\r\n};\r\n\r\nexport default HelloContainer;","import React, {useEffect} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst Error = ({onRestartGame, timerOff}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(timerOff())\r\n    }, []);\r\n\r\n    return (\r\n        <section className=\"result\">\r\n            <div className=\"result__logo\">\r\n                <img src=\"/img/melody-logo.png\" alt=\"Угадай мелодию\" width=\"186\" height=\"83\"/>\r\n            </div>\r\n            <h2 className=\"result__title\">Какая жалость!</h2>\r\n            <p className=\"result__total result__total--fail\">У вас закончились все попытки. Ничего, повезёт в следующий\r\n                раз!</p>\r\n            <button className=\"replay\" type=\"button\" onClick={onRestartGame}>Попробовать ещё раз</button>\r\n        </section>\r\n    )\r\n};\r\n\r\nError.propTypes = {\r\n    onRestartGame: PropTypes.func.isRequired,\r\n    timerOff: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Error;","import React from \"react\";\r\nimport Error from \"./error/error\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {restartGameHandler, timerOff} from \"../../../reducers/game-action-thunk\";\r\n\r\n\r\nconst ErrorContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const restartGame = () => dispatch(restartGameHandler());\r\n\r\n    return (\r\n        <Error\r\n            onRestartGame={restartGame}\r\n            timerOff={timerOff}\r\n        />\r\n    )\r\n};\r\n\r\nexport default ErrorContainer;","import React, {useEffect} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nconst Result = ({onRestartGame, timerOff, countOfRightAnswers, countOfMistakes}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(timerOff())\r\n    }, []);\r\n\r\n    return (\r\n        <section className=\"result\">\r\n            <div className=\"result__logo\">\r\n                <img src=\"img/melody-logo.png\" alt=\"Угадай мелодию\" width=\"186\" height=\"83\"/>\r\n            </div>\r\n            <h2 className=\"result__title\">Вы настоящий меломан!</h2>\r\n            <p className=\"result__total\">Вы ответили правильно на {countOfRightAnswers} вопросов и совершили {countOfMistakes} ошибки</p>\r\n            <button className=\"replay\" type=\"button\" onClick={onRestartGame}>Сыграть ещё раз</button>\r\n        </section>\r\n    )\r\n};\r\n\r\nResult.propTypes = {\r\n    onRestartGame: PropTypes.func.isRequired,\r\n    timerOff: PropTypes.func.isRequired,\r\n    countOfRightAnswers: PropTypes.number.isRequired,\r\n    countOfMistakes: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Result;","import React from \"react\";\r\nimport Result from \"./result/result\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {lengthOfRightAnswersArr} from \"../../../reducers/answers-slice\";\r\nimport {getMistakes} from \"../../../reducers/mistakes-slice\";\r\nimport {restartGameHandler, timerOff} from \"../../../reducers/game-action-thunk\";\r\n\r\nconst ResultContainer = () => {\r\n    const countOfRightAnswers = useSelector(lengthOfRightAnswersArr);\r\n    const countOfMistakes = useSelector(getMistakes);\r\n    const dispatch = useDispatch();\r\n    const restartGame = () => dispatch(restartGameHandler());\r\n\r\n    return (\r\n        <Result\r\n            onRestartGame={restartGame}\r\n            countOfRightAnswers={countOfRightAnswers}\r\n            countOfMistakes={countOfMistakes}\r\n            timerOff={timerOff}\r\n        />\r\n    )\r\n};\r\n\r\nexport default ResultContainer;\r\n\r\n","const compose = (...fn) => arg => {\r\n  return fn.reduce((reducer, f) => f(reducer), arg);\r\n};\r\n\r\nconst serializeTime = time => ({\r\n  minutes: (time - time % 60) / 60,\r\n  seconds: time % 60,\r\n});\r\n\r\nconst binaryMinutes = time => ({\r\n  ...time,\r\n  minutes: time.minutes < 10 ? ('0' + time.minutes) : time.minutes,\r\n});\r\n\r\nconst binarySeconds = time => ({\r\n  ...time,\r\n  seconds: time.seconds < 10 ? ('0' + time.seconds) : time.seconds,\r\n});\r\n\r\nconst transformTime = compose(serializeTime, binaryMinutes, binarySeconds);\r\n\r\nexport default transformTime;","import React from \"react\";\r\nimport transformTime from \"./serializeTime\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Timer = ({time, maxTime}) => {\r\n    const newTime = transformTime(time);\r\n\r\n    const lengthOfStrokeDasharray = 2324;\r\n\r\n    let progress = Math.floor((maxTime - time) / maxTime * lengthOfStrokeDasharray);\r\n\r\n    return (\r\n        <>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"timer\" viewBox=\"0 0 780 780\">\r\n                <circle className='timer__line' cx='390' cy='390' r='370' style={{\r\n                    filter: 'url(#blur)',\r\n                    transform: 'rotate(-90deg) scaleY(-1)',\r\n                    transformOrigin: 'center',\r\n                    strokeDasharray: lengthOfStrokeDasharray,\r\n                    strokeDashoffset: progress,\r\n                    // transition: \"stroke-dashoffset linear 1s\"\r\n                }}/>\r\n            </svg>\r\n            <div className=\"timer__value\">\r\n                <span className=\"timer__mins\">{newTime.minutes}</span>\r\n                <span className=\"timer__dots\">:</span>\r\n                <span className=\"timer__secs\">{newTime.seconds}</span>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nTimer.propTypes = {\r\n    time: PropTypes.number.isRequired,\r\n    maxTime: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport Timer from \"./timer\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst TimerContainer = (props) => {\r\n    const time = useSelector(state => state.timer.currentTime);\r\n    const maxTime = useSelector(state => state.timer.maxTime);\r\n\r\n    return (<Timer\r\n        time={time}\r\n        maxTime={maxTime}\r\n    />)\r\n};\r\n\r\nexport default TimerContainer;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Mistakes = ({countOfMistakes}) => {\r\n  const mistakes = new Array(countOfMistakes).fill(null);\r\n\r\n  return (\r\n    <div className=\"game__mistakes\" style={{width: '260px'}}>\r\n      {mistakes.map((it, i) => (<div className=\"wrong\" key={`mistakes-${i}`}></div>))}\r\n    </div>\r\n  )\r\n};\r\n\r\nMistakes.propTypes = {\r\n  countOfMistakes: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Mistakes;\r\n","import React from \"react\";\r\nimport Mistakes from \"./mistakes/mistakes\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getMistakes} from \"../../../reducers/mistakes-slice\";\r\n\r\nconst MistakesContainer = () => {\r\n    const countOfMistakes = useSelector(getMistakes);\r\n\r\n    return (\r\n        <Mistakes\r\n            countOfMistakes={countOfMistakes}\r\n        />\r\n    )\r\n};\r\n\r\nexport default MistakesContainer;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst BackToStart = ({goToStartGame}) => {\r\n\r\n    const startGameHandler = (evt) => {\r\n        evt.preventDefault();\r\n        goToStartGame();\r\n    };\r\n\r\n    return (\r\n        <a className=\"game__back\" href=\"/\" onClick={startGameHandler}>\r\n            <span className=\"visually-hidden\">Сыграть ещё раз</span>\r\n            <img className=\"game__logo\" src=\"img/melody-logo-ginger.png\" alt=\"Угадай мелодию\"/>\r\n        </a>\r\n    )\r\n};\r\n\r\nexport default BackToStart;\r\n\r\nBackToStart.propTypes = {\r\n    goToStartGame: PropTypes.func.isRequired,\r\n};","import React from \"react\";\r\nimport BackToStart from \"./back-to-start/back-to-start\";\r\nimport {restartGameHandler} from \"../../../reducers/game-action-thunk\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst BackToStartContainer = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const restartGame = () => dispatch(restartGameHandler());\r\n\r\n    return (\r\n        <BackToStart\r\n            goToStartGame={restartGame}\r\n        />\r\n    )\r\n};\r\n\r\nexport default BackToStartContainer;","import React, {useEffect, useRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AudioPlayer = ({src, isLoading, setLoadingStatus, isPlaying, changePlayer}) => {\r\n    const audioRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const audio = audioRef.current;\r\n        audio.src = src;\r\n        audio.oncanplaythrough = () => setLoadingStatus(false);\r\n        // audio.ontimeupdate = () => this.props.onTimeUpdate(audio.currentTime);\r\n        if (isPlaying) {\r\n            audio.play();\r\n        } else {\r\n            audio.pause();\r\n        }\r\n\r\n        return () => {\r\n            audio.oncanplaythrough = null;\r\n            audio.onplay = null;\r\n            audio.onpause = null;\r\n            audio.ontimeupdate = null;\r\n            audio.src = ``;\r\n        }\r\n    }, [src, isLoading, isPlaying, setLoadingStatus]);\r\n\r\n    return (\r\n        <>\r\n            <button\r\n                className={`track__button track__button--${isPlaying ? `pause` : `play`}`}\r\n                type=\"button\"\r\n                disabled={isLoading}\r\n                onClick={changePlayer}\r\n            />\r\n            <div className=\"track__status\">\r\n                <audio\r\n                    ref={audioRef}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nAudioPlayer.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    isPlaying: PropTypes.bool.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n    setLoadingStatus: PropTypes.func.isRequired,\r\n    changePlayer: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AudioPlayer;\r\n","import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AudioPlayer from \"./audio-player\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {isPlayerPlayingId, newActivePlayer} from \"../../../reducers/active-player-slice\";\r\n\r\n\r\nconst AudioPlayerContainer = ({src, id}) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const isPlaying = useSelector(isPlayerPlayingId(id));\r\n    const dispatch = useDispatch();\r\n    const changePlayer = (id) => () => dispatch(newActivePlayer(id));\r\n\r\n    return (\r\n        <AudioPlayer\r\n            src={src}\r\n            isLoading={isLoading}\r\n            setLoadingStatus={setIsLoading}\r\n            isPlaying={isPlaying}\r\n            changePlayer={changePlayer(id)}\r\n        />\r\n    )\r\n};\r\n\r\nexport default AudioPlayerContainer;\r\n\r\nAudioPlayerContainer.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AnswerChecked = ({id, isChecked, changeChecked}) => {\r\n    return (\r\n        <div className=\"game__answer\">\r\n            <input className=\"game__input visually-hidden\" type=\"checkbox\" name=\"answer\"\r\n                   value={`answer-${id}`} id={`answer-${id}`}\r\n                   onChange={changeChecked}\r\n                   checked={isChecked}\r\n            />\r\n            <label className=\"game__check\" htmlFor={`answer-${id}`}>Отметить</label>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AnswerChecked;\r\n\r\n\r\nAnswerChecked.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    isChecked: PropTypes.bool.isRequired,\r\n    changeChecked: PropTypes.func.isRequired,\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AnswerChecked from \"./answer-checked\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeGenreAnswers} from \"../../../../../../reducers/genre-answers-slice\";\r\nimport {checkedId} from \"../../../../../../reducers/game-action-thunk\";\r\n\r\nconst AnswerCheckedContainer = ({id}) => {\r\n    const isChecked = useSelector(checkedId(id));\r\n    const dispatch = useDispatch();\r\n    const changeChecked = () => dispatch(changeGenreAnswers(id));\r\n\r\n    return (\r\n        <AnswerChecked\r\n            id={id}\r\n            isChecked={isChecked}\r\n            changeChecked={changeChecked}\r\n        />\r\n    )\r\n};\r\n\r\nexport default AnswerCheckedContainer;\r\n\r\n\r\nAnswerCheckedContainer.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AudioPlayerContainer from \"../../../audio-player/audio-player-container\";\r\nimport AnswerCheckedContainer from \"./answer-checked/answer-checked-container\";\r\n\r\n\r\nconst GenreQuestionForm = ({genre, answers, onAnswerButtonClick}) => {\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"game__title\">Выберите {genre}-треки</h2>\r\n            <form className=\"game__tracks\" onSubmit={onAnswerButtonClick}>\r\n                {answers.map((it, i) => {\r\n                    return (\r\n                        <div key={`answer-${i}`} className=\"track\">\r\n\r\n                            <AudioPlayerContainer\r\n                                src={it.src}\r\n                                id={i}\r\n                            />\r\n\r\n                            <AnswerCheckedContainer\r\n                                id={i}\r\n                            />\r\n\r\n                        </div>\r\n                    );\r\n                })}\r\n                <button className=\"game__submit button\" type=\"submit\">Ответить</button>\r\n            </form>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GenreQuestionForm;\r\n\r\n\r\nGenreQuestionForm.propTypes = {\r\n    genre: PropTypes.string.isRequired,\r\n    answers: PropTypes.array.isRequired,\r\n    onAnswerButtonClick: PropTypes.func.isRequired,\r\n}","import React from \"react\";\r\nimport GenreQuestionForm from \"./genre-question-form/genre-question-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getAnswers, getGenre} from \"../../../../reducers/question-slice\";\r\nimport {genreAnswerHandler} from \"../../../../reducers/game-action-thunk\";\r\n\r\n\r\nconst GenreQuestionFormContainer = () => {\r\n\r\n    const answers = useSelector(getAnswers);\r\n    const genre = useSelector(getGenre);\r\n    const dispatch = useDispatch();\r\n\r\n    const onAnswerButtonClick = (evt) => {\r\n        evt.preventDefault();\r\n        dispatch(genreAnswerHandler());\r\n    }\r\n\r\n    return (\r\n        <GenreQuestionForm\r\n            genre={genre}\r\n            answers={answers}\r\n            onAnswerButtonClick={onAnswerButtonClick}\r\n        />\r\n    )\r\n};\r\n\r\nexport default GenreQuestionFormContainer;","import React from \"react\";\r\nimport TimerContainer from \"../timer/timer-container\";\r\nimport MistakesContainer from \"../mistakes-container/mistakes-container\";\r\nimport BackToStartContainer from \"../back-to-start-container/back-to-start-container\";\r\nimport GenreQuestionFormContainer from \"./genre-question-form-container/genre-question-form-container\";\r\n\r\nconst GenreQuestion = () => {\r\n\r\n    return (\r\n        <section className=\"game game--genre\">\r\n            <header className=\"game__header\" style={{justifyContent: 'center'}}>\r\n\r\n                <BackToStartContainer/>\r\n\r\n                <TimerContainer/>\r\n\r\n                <MistakesContainer/>\r\n\r\n            </header>\r\n            <section className=\"game__screen\">\r\n\r\n                <GenreQuestionFormContainer/>\r\n\r\n            </section>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default GenreQuestion;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AnswerButton = ({id, source, onAnswerButtonClick}) => {\r\n    const {picture, artist} = source;\r\n\r\n    return (\r\n        <div key={`answer-${id}`} className=\"artist\">\r\n            <input className=\"artist__input visually-hidden\" type=\"radio\" name=\"answer\"\r\n                   value={artist}\r\n                   id={`answer-${id}`}\r\n                   onClick={onAnswerButtonClick}/>\r\n            <label className=\"artist__name\" htmlFor={`answer-${id}`}>\r\n                <img className=\"artist__picture\" src={picture} alt={artist}/>\r\n                {artist}\r\n            </label>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AnswerButton;\r\n\r\nAnswerButton.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    source: PropTypes.object.isRequired,\r\n    onAnswerButtonClick: PropTypes.func.isRequired,\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AnswerButton from \"./answer-button/answer-button\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {artistAnswerHandler} from \"../../../../../../reducers/game-action-thunk\";\r\n\r\n\r\nconst AnswerButtonContainer = ({id, source}) => {\r\n    const dispatch = useDispatch();\r\n    const onAnswerButtonClick = (evt) => dispatch(artistAnswerHandler(evt.target.value));\r\n\r\n    return (\r\n        <AnswerButton\r\n            id={id}\r\n            source={source}\r\n            onAnswerButtonClick={onAnswerButtonClick}\r\n        />\r\n    )\r\n};\r\n\r\nexport default AnswerButtonContainer;\r\n\r\nAnswerButtonContainer.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    source: PropTypes.object.isRequired,\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AnswerButtonContainer from \"./answer-button-container/answer-button-container\";\r\n\r\n\r\nconst ArtistQuestionForm = ({answers}) => {\r\n\r\n    const dontSendFormData = evt => evt.preventDefault();\r\n\r\n    return (\r\n        <form className=\"game__artist\" onSubmit={dontSendFormData}>\r\n\r\n            {answers.map((it, i) => {\r\n                return (\r\n                    <AnswerButtonContainer\r\n                        key={i}\r\n                        id={i}\r\n                        source={it}\r\n                    />\r\n                );\r\n            })}\r\n\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default ArtistQuestionForm;\r\n\r\n\r\nArtistQuestionForm.propTypes = {\r\n    answers: PropTypes.array.isRequired,\r\n};","import React from \"react\";\r\nimport ArtistQuestionForm from \"./artist-question-form/artist-question-form\";\r\nimport AudioPlayerContainer from \"../../audio-player/audio-player-container\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getAnswers, getSongSrc} from \"../../../../reducers/question-slice\";\r\n\r\n\r\nconst ArtistQuestionFormContainer = () => {\r\n    const songSrc = useSelector(getSongSrc);\r\n    const answers = useSelector(getAnswers);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"game__track\">\r\n                <div className=\"track\">\r\n\r\n                    <AudioPlayerContainer\r\n                        src={songSrc}\r\n                        id={0}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <ArtistQuestionForm\r\n                answers={answers}\r\n            />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ArtistQuestionFormContainer;","import React from \"react\";\r\nimport TimerContainer from \"../timer/timer-container\";\r\nimport MistakesContainer from \"../mistakes-container/mistakes-container\";\r\nimport BackToStartContainer from \"../back-to-start-container/back-to-start-container\";\r\nimport ArtistQuestionFormContainer from \"./artist-question-form-container/artist-question-form-container\";\r\n\r\nconst ArtistQuestion = () => {\r\n\r\n    return (\r\n        <section className=\"game game--artist\">\r\n            <header className=\"game__header\" style={{justifyContent: 'center'}}>\r\n\r\n                <BackToStartContainer/>\r\n\r\n                <TimerContainer/>\r\n\r\n                <MistakesContainer/>\r\n\r\n            </header>\r\n\r\n            <section className=\"game__screen\">\r\n                <h2 className=\"game__title\">Кто исполняет эту песню?</h2>\r\n\r\n                <ArtistQuestionFormContainer/>\r\n\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ArtistQuestion;\r\n","import React from 'react'\r\nimport styles from './loading.module.css'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className={styles.background}>\r\n            <div className={styles.['lds-default']}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Loading","import React, {useEffect} from \"react\"\r\nimport HelloContainer from \"./hello-container/hello-container\"\r\nimport ErrorContainer from \"./error-container/error-container\"\r\nimport ResultContainer from \"./result-container/result-container\"\r\nimport GenreQuestion from \"./genre-question/genre-question.js\"\r\nimport ArtistQuestion from \"./artist-question/artist-question\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {\r\n    fetchQuestions,\r\n    getQuestionsStatus,\r\n    getTypeOfQuestion,\r\n    isNotEndOfQuestions,\r\n    isStartScreen\r\n} from \"../../reducers/question-slice\"\r\nimport {isNotGameOver} from \"../../reducers/game-action-thunk\"\r\nimport {getIsAuthorized} from \"../../reducers/authorization-slice\"\r\nimport Login from \"./login/login\"\r\nimport Loading from \"./loading/loading\";\r\n\r\n\r\nconst App = () => {\r\n    const notEndOfQuestions = useSelector(isNotEndOfQuestions);\r\n    const notGameOver = useSelector(isNotGameOver);\r\n    const statusOfFetchingQuestions = useSelector(getQuestionsStatus);\r\n    const typeOfQuestion = useSelector(getTypeOfQuestion);\r\n    const startScreen = useSelector(isStartScreen);\r\n    const authorization = useSelector(getIsAuthorized);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (authorization) {dispatch(fetchQuestions());}\r\n    }, [authorization, dispatch]);\r\n\r\n    const getScreen = (isStartScreen, isNotEndOfQuestions, isNotGameOver, statusOfFetchingQuestions, typeOfQuestion, isAuthorization) => {\r\n\r\n        // if (!isAuthorization) {return <Login/>}\r\n\r\n        if (statusOfFetchingQuestions === \"loading\") {\r\n            return <Loading/>\r\n        }\r\n\r\n        if (isStartScreen) {\r\n            return (\r\n                <HelloContainer/>\r\n            )\r\n        }\r\n\r\n        if (isNotGameOver) {\r\n            if (isNotEndOfQuestions) {\r\n                if (typeOfQuestion === `genre`) {\r\n                    return (\r\n                        <GenreQuestion/>\r\n                    )\r\n                }\r\n\r\n                if (typeOfQuestion === `artist`) {\r\n                    return (\r\n                        <ArtistQuestion/>\r\n                    )\r\n                }\r\n            } else {\r\n                return <ResultContainer/>\r\n            }\r\n        } else {\r\n            return <ErrorContainer/>\r\n        }\r\n    };\r\n\r\n    return getScreen(startScreen, notEndOfQuestions, notGameOver, statusOfFetchingQuestions, typeOfQuestion, authorization);\r\n}\r\n\r\n\r\nexport default App\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds-default\":\"loading_lds-default__3gaWa\",\"background\":\"loading_background__39Rf1\"};"],"sourceRoot":""}